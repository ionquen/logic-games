{"version":3,"sources":["static/img/minesweeper/games_sapper-cell.svg","static/img/minesweeper/games_sapper-clear.svg","static/img/minesweeper/games_sapper-flag.svg","static/img/minesweeper/games_sapper-bomb.svg","components/games/Minesweeper.js","components/games/parts/Scoreboard.js","static/css/score.module.css","components/games/parts/Alert.js","static/css/alert.module.css","components/games/parts/Ruler.js","static/css/canvas.module.css","static/css/minesweeper.module.css"],"names":["Tictactoe","props","displayPoint","x","y","value","ctx","canvas","current","getContext","font","undefined","board","gameInfo","boardSizeX","cellFlagIcon","Image","src","IconFlag","onload","drawImage","cellClosedIcon","IconClosed","cellBombIcon","IconBomb","cellOpenedIcon","IconOpened","fillStyle","fillText","clear","clearRect","boardSizeY","strokeStyle","lineWidth","beginPath","i","j","action","e","typeClick","preventDefault","paused","rect","getBoundingClientRect","clientX","left","clientY","top","coord","state","actionTypeDefuse","hasOwnProperty","emitter","emit","cell","score","alertValue","React","createRef","this","players","forEach","player","index","userId","localStorage","getItem","playerNumber","emitterUnsubGame","sub","data","type","setState","prevState","newScore","Object","assign","roundStarted","updateScore","currentPlayer","userName","cells","conterCells","keys","length","Number","countCells","savedData","parsedSavedData","JSON","parse","scoreSum","item","setItem","stringify","Scoreboard","displayCurrentPlayer","scoreItemNames","Alert","className","sapperStyle","button","highlite","onClick","styles","ref","onContextMenu","width","height","Ruler","ruler","ruler24","countX","countY","Component","getPlayersList","sortedPlayersArray","queue","numberInQueue","push","Array","prototype","apply","map","style","color","connected","prop","timeleft","timeTurn","lasttime","Date","now","playerTurnTimer","setInterval","newTimeleft","clearInterval","scoreColor","itemName","scoreCurrentPlayer","currentPlayerTurn","backgroundColor","module","exports","shouldComponentUpdate","nextProps","alertDisplay","alertTimeoutDestroy","clearTimeout","setTimeout","forceUpdate","alertHide","alert","getListByLength","section"],"mappings":"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","file":"static/js/5.ea30b81d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/games_sapper-cell.53f01d61.svg\";","export default __webpack_public_path__ + \"static/media/games_sapper-clear.35ecb60d.svg\";","export default __webpack_public_path__ + \"static/media/games_sapper-flag.5ae1eabd.svg\";","export default __webpack_public_path__ + \"static/media/games_sapper-bomb.86bfacec.svg\";","import React from 'react'\r\nimport Scoreboard from './parts/Scoreboard'\r\nimport Alert from './parts/Alert'\r\nimport Ruler from './parts/Ruler'\r\n\r\nimport styles from '../../static/css/canvas.module.css'\r\nimport sapperStyle from '../../static/css/minesweeper.module.css'\r\n\r\nimport IconClosed from '../../static/img/minesweeper/games_sapper-cell.svg'\r\nimport IconOpened from '../../static/img/minesweeper/games_sapper-clear.svg'\r\nimport IconFlag from '../../static/img/minesweeper/games_sapper-flag.svg'\r\nimport IconBomb from '../../static/img/minesweeper/games_sapper-bomb.svg'\r\n\r\nexport default class Tictactoe extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      score: props.gameInfo.score,\r\n      alertValue: \"\", \r\n      actionTypeDefuse: true\r\n    }\r\n    this.canvas = React.createRef()\r\n  }\r\n  componentWillMount() {\r\n    this.paused = this.props.gameInfo.paused\r\n    this.board = {}\r\n    this.props.players.forEach((player, index) => player.userId=== +localStorage.getItem('userId')?this.playerNumber = index:null)\r\n    \r\n    this.emitterUnsubGame = this.props.emitter.sub('game', data => {\r\n      switch(data.type) {\r\n        case 'roundStarted': \r\n          this.setState(prevState=>{\r\n            const newScore = Object.assign(prevState.score)\r\n            for(let index in prevState.score) {\r\n              newScore[index][1]=0\r\n            }\r\n            return {\r\n              roundStarted: data.roundStarted,\r\n              score: newScore,\r\n              alertValue: `Раунд начинается!`\r\n            }\r\n          })\r\n          this.paused = false\r\n          this.board = {}\r\n          this.clear()\r\n          break\r\n        case 'roundFinished': {\r\n            this.paused = true\r\n            const updateScore = this.state.score[data.currentPlayer][0]++\r\n            this.setState(prevState => ({\r\n                score: {...prevState.score, ...updateScore},\r\n                alertValue: `Раунд завершён! Победил ${this.props.players[data.currentPlayer].userName}`\r\n            }))\r\n          break\r\n        }\r\n        case 'openedCells': {\r\n          for (let cell in data.cells) {\r\n            this.displayPoint(cell%this.props.gameInfo.boardSizeX, ~~(cell/this.props.gameInfo.boardSizeX), data.cells[cell])\r\n          }\r\n          const conterCells = this.state.score[this.playerNumber][1]+Object.keys(data.cells).length\r\n          this.setState(prevState => {\r\n            const newScore = Object.assign(prevState.score)\r\n            newScore[this.playerNumber][1]=conterCells\r\n            return {score: newScore}\r\n          })\r\n          break\r\n        }\r\n        case 'explode': \r\n          if (this.playerNumber===Number(data.currentPlayer)) this.displayPoint(data.cell%this.props.gameInfo.boardSizeX, ~~(data.cell/this.props.gameInfo.boardSizeX), 9)\r\n          this.setState({alertValue: `${this.props.players[data.currentPlayer].userName} взорвался`})\r\n          break\r\n        case 'progress': {\r\n        const conterCells = this.state.score[data.currentPlayer][1]+data.countCells\r\n        this.setState(prevState =>  {\r\n          const newScore = Object.assign(prevState.score)\r\n          newScore[data.currentPlayer][1]=conterCells\r\n          return {score: newScore}})\r\n          break \r\n        }\r\n        case 'error': \r\n          break\r\n        case 'matchFinished': \r\n          this.setState({alertValue: `Матч завершён. Победил ${this.props.players[Number(data.currentPlayer)].userName}`})\r\n          break\r\n        default: break\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.clear()\r\n    const savedData = localStorage.getItem('sapperData')\r\n    //Получение сохранённого состояния поля\r\n    if (!savedData==\"\") {\r\n      const parsedSavedData = JSON.parse(savedData)\r\n      let scoreSum = 0\r\n      for (let item in this.state.score) {\r\n        scoreSum+=this.state.score[item][0]\r\n      }\r\n      if (parsedSavedData.scoreSum===scoreSum) {\r\n        for (let cell in parsedSavedData.board) {\r\n          this.displayPoint(cell%this.props.gameInfo.boardSizeX, ~~(cell/this.props.gameInfo.boardSizeX), parsedSavedData.board[cell])\r\n          \r\n        }\r\n      } else {}\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    //Сохранение текущего состояния поля на случай вылета\r\n    let scoreSum = 0 \r\n    for (let item in this.state.score) {\r\n      scoreSum+=this.state.score[item][0]\r\n    }\r\n    const savedData = {scoreSum, board: this.board}\r\n    localStorage.setItem('sapperData', JSON.stringify(savedData))\r\n    this.emitterUnsubGame()\r\n  }\r\n\r\n  displayPoint = (x, y, value) => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.font = \"800 24px inter\"\r\n    if (value!==undefined) this.board[this.props.gameInfo.boardSizeX*y + x] = value\r\n    switch (value) {\r\n      case -1: { //highlight a bomb\r\n        const cellFlagIcon = new Image()\r\n        cellFlagIcon.src = IconFlag\r\n        cellFlagIcon.onload = () => {\r\n          ctx.drawImage(cellFlagIcon, x*25, y*25, 25, 25)\r\n        }\r\n        break}\r\n      case undefined: { //clear a cell\r\n        const cellClosedIcon = new Image()\r\n        cellClosedIcon.src = IconClosed\r\n        cellClosedIcon.onload = () => {\r\n          ctx.drawImage(cellClosedIcon, x*25, y*25, 25, 25)\r\n          delete this.board[this.props.gameInfo.boardSizeX*y + x]\r\n        }\r\n        break}\r\n      case 9: { \r\n        const cellBombIcon = new Image()\r\n        cellBombIcon.src = IconBomb\r\n        cellBombIcon.onload = () => {\r\n          ctx.drawImage(cellBombIcon, x*25, y*25, 25, 25)\r\n        }\r\n        break}\r\n      default: break\r\n    }\r\n    if (value>=0&&value<9) {\r\n      const cellOpenedIcon = new Image()\r\n      cellOpenedIcon.src = IconOpened\r\n      cellOpenedIcon.onload = () => {\r\n        switch (value) {\r\n          case 1: ctx.fillStyle=\"blue\"; break\r\n          case 2: ctx.fillStyle=\"green\"; break\r\n          case 3: ctx.fillStyle=\"red\"; break\r\n          case 4: ctx.fillStyle=\"blue\"; break\r\n          case 5: ctx.fillStyle=\"brown\"; break\r\n          case 6: ctx.fillStyle=\"aqua\"; break\r\n          case 7: ctx.fillStyle=\"yellow\"; break\r\n          case 8: ctx.fillStyle=\"brown\"; break\r\n          default: break\r\n        }\r\n        ctx.drawImage(cellOpenedIcon, x*25, y*25, 25, 25)\r\n        if (value>0) ctx.fillText(value, x*25+5, y*25+22)\r\n      }\r\n    }\r\n  }\r\n  clear = () => {\r\n    const cellClosedIcon = new Image()\r\n    cellClosedIcon.src = IconClosed\r\n    cellClosedIcon.onload = () => {\r\n      const ctx = this.canvas.current.getContext('2d')\r\n      ctx.clearRect(0,0,(this.props.gameInfo.boardSizeX+1)*25, (this.props.gameInfo.boardSizeY+1)*25)\r\n      ctx.strokeStyle = '#000'\r\n      ctx.lineWidth = 1\r\n      ctx.beginPath();\r\n      for(let i = 0; i < this.props.gameInfo.boardSizeX; i++) {\r\n        for (let j = 0; j <this.props.gameInfo.boardSizeY; j++) {\r\n          ctx.drawImage(cellClosedIcon, i*25, j*25, 25, 25)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  action = (e, typeClick) => {\r\n    e.preventDefault()\r\n    if (this.paused) return\r\n    const rect = this.canvas.current.getBoundingClientRect()\r\n    const x = ~~((e.clientX - rect.left)/25)\r\n    const y = ~~((e.clientY - rect.top)/25)\r\n    const coord = y*this.props.gameInfo.boardSizeX+x\r\n    if (this.state.actionTypeDefuse&&typeClick===\"left\") {\r\n      if (!this.board.hasOwnProperty(coord)) {\r\n        this.props.emitter.emit('action', {cell: coord})\r\n      }\r\n    } else {//Пометить ячейку как заминированную\r\n      if (this.board[coord]===undefined||this.board[coord]===-1) this.displayPoint(x, y, this.board[coord]===-1?undefined: -1)\r\n    }\r\n  }\r\n  render() {\r\n      return (\r\n            <>\r\n              <Scoreboard displayCurrentPlayer={false}\r\n                paused={this.paused}\r\n                players={this.props.players} \r\n                playerNumber={this.playerNumber} \r\n                score={this.state.score}\r\n                scoreItemNames={['Счёт', 'Прогресс']}\r\n              />\r\n\r\n              <Alert value={this.state.alertValue} />\r\n              <div className={`${sapperStyle.button} ${this.state.actionTypeDefuse?\"\":sapperStyle.highlite}`} \r\n                onClick={() => this.setState({actionTypeDefuse: this.state.actionTypeDefuse?false:true})} >\r\n              </div>\r\n              <div className={styles.canvas}>\r\n                <canvas ref={this.canvas} \r\n                  onClick={(e) => this.action(e, \"left\")} \r\n                  onContextMenu={(e) => this.action(e, \"right\")} \r\n                  width={(+this.props.gameInfo.boardSizeX)*25+1} \r\n                  height={(+this.props.gameInfo.boardSizeY)*25+1}>\r\n                </canvas> \r\n                <Ruler className={`${styles.ruler} ${styles.ruler24}`}  \r\n                  countX={this.props.gameInfo.boardSizeX} \r\n                  countY={this.props.gameInfo.boardSizeY}\r\n                  />\r\n              </div>\r\n            </>\r\n      )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styles from '../../../static/css/score.module.css'\r\n/*\r\n  displayCurrentPlayer - Выделить текущего игрока\r\n  paused - Останавливает/Включает таймер\r\n  queue - Последовательность игроков к которым применяется\r\n  players - Массив игроков ex: [{\"userId\":\"11\", \"userName\": \"eeee\r\n  currentPlayerTurn - Текщий игрок\r\n  playerNumber - Игрок (не ставить если гость)\r\n  timeTurn - Время на совершение хода \r\n  lasttime - Время начала хода ()\r\n  score - Счёт ex: [[0,0,0], [1,0,0]]\r\n  scoreItemNames - Названия столбцов ex: ['Счёт', 'Осталось', 'Найдено']\r\n*/\r\nexport default class Scoreboard extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      timeleft: ~~((props.timeTurn + props.lasttime - Date.now())/1000),\r\n    }\r\n    this.playerTurnTimer = undefined\r\n  }\r\n  componentDidMount() {\r\n    //Отображение оставшегося времени у игрока\r\n    if (this.props.displayCurrentPlayer) this.playerTurnTimer = setInterval(() => {\r\n      if (!this.paused) {\r\n        const newTimeleft = ~~((this.props.timeTurn + this.props.lasttime - Date.now())/1000)\r\n        this.setState({timeleft: newTimeleft})\r\n      }\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.props.displayCurrentPlayer) clearInterval(this.playerTurnTimer)\r\n  }\r\n  getPlayersList = () => {\r\n    const sortedPlayersArray = []\r\n    if (this.props.queue!==undefined){\r\n      for (let numberInQueue of this.props.queue) {\r\n        sortedPlayersArray.push(this.props.players[numberInQueue])\r\n      }\r\n    } else Array.prototype.push.apply(sortedPlayersArray,this.props.players)\r\n    \r\n    return sortedPlayersArray.map((player, index) => \r\n    <div style={{color: !player.connected?\"rgb(150,150,150)\":this.props.playerNumber===index?\"rgb(255,165,0)\":\"#000\"}}>\r\n      <div>\r\n        <div>{index+1}</div>\r\n        <div>#{player.userId}</div>\r\n        <div>{player.userName}</div>\r\n      </div>\r\n      {this.props.score[index].map(prop=>\r\n      <div>{prop}</div>\r\n      )}\r\n    </div>\r\n    )\r\n  }\r\n  render() {\r\n    const scoreColor = `rgb(${255 - this.state.timeleft/(this.props.timeTurn/1000)*255}, ${this.state.timeleft/(this.props.timeTurn/1000)*200}, 0)`\r\n      return (\r\n              <div className={styles.score}>\r\n                <div>\r\n                  <div>Игроки</div>\r\n                  {this.props.scoreItemNames.map(itemName=>\r\n                    <div>{itemName}</div>\r\n                    )}\r\n                </div>\r\n                {this.props.displayCurrentPlayer?\r\n                <div className={styles.scoreCurrentPlayer} style={{color: scoreColor, top: 30 + this.props.currentPlayerTurn*42+'px', backgroundColor: scoreColor}}>\r\n                  <div>{this.state.timeleft}</div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                </div>\r\n                :<div></div>\r\n                }\r\n                \r\n                {this.getPlayersList()}\r\n              </div>\r\n      )\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"score_score__1Slqo\",\"scoreCurrentPlayer\":\"score_scoreCurrentPlayer__36TAD\"};","import React from 'react'\r\nimport styles from '../../../static/css/alert.module.css'\r\n\r\nexport default class Alert extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n  }\r\n  shouldComponentUpdate = (nextProps) => {\r\n    if (nextProps.value===this.props.value) return false\r\n    this.alertDisplay = true\r\n    if (this.alertTimeoutDestroy!==undefined) {\r\n      clearTimeout(this.alertTimeoutDestroy)\r\n    }\r\n    this.alertTimeoutDestroy = setTimeout(() => {\r\n      this.alertDisplay = false\r\n      this.alertTimeoutDestroy = undefined\r\n      this.forceUpdate()\r\n    }, 3000)\r\n    return true\r\n  }\r\n  alertHide = () => {\r\n    clearTimeout(this.alertTimeoutDestroy)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n    this.forceUpdate()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`${styles.alert} ${this.alertDisplay?styles.alertDisplay:''}`}>\r\n        <div onClick={this.alertHide}>\r\n          {this.props.value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__285A5\",\"alertDisplay\":\"alert_alertDisplay__3muLT\"};","import React from 'react'\r\n/*\r\n  displayCurrentPlayer - Выделить текущего игрока\r\n*/\r\nexport default function Ruler(props) {\r\n  function getListByLength(length) {\r\n    let section = []\r\n    for(let i = 0; i < length; i++) {\r\n      section.push(<li></li>)\r\n    }\r\n    return section\r\n  }\r\n  return (\r\n    <div className={props.className} >\r\n        <ol>\r\n          {getListByLength(props.countX)}\r\n        </ol>\r\n        <ol>\r\n          {getListByLength(props.countY)}\r\n        </ol>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__1xjwk\",\"ruler\":\"canvas_ruler__3jpTN\",\"ruler24\":\"canvas_ruler24__2YnvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"minesweeper_button__3nJtR\",\"highlite\":\"minesweeper_highlite__2SRZT\"};"],"sourceRoot":""}