{"version":3,"sources":["components/games/parts/Scoreboard.js","static/css/score.module.css","components/games/parts/Alert.js","static/css/alert.module.css","static/css/canvas.module.css","static/css/sapper.module.css","components/games/Sapper.js"],"names":["Scoreboard","props","getPlayersList","sortedPlayersArray","undefined","queue","numberInQueue","push","players","Array","prototype","apply","map","player","index","style","color","connected","playerNumber","userId","userName","score","prop","state","timeleft","timeTurn","lasttime","Date","now","playerTurnTimer","this","displayCurrentPlayer","setInterval","paused","setState","clearInterval","scoreColor","className","styles","scoreItemNames","itemName","scoreCurrentPlayer","top","currentPlayerTurn","backgroundColor","React","Component","module","exports","Alert","shouldComponentUpdate","alertDisplay","alertTimeoutDestroy","clearTimeout","setTimeout","forceUpdate","alertHide","alert","onClick","value","Tictactoe","displayPoint","x","y","ctx","canvas","current","getContext","font","board","gameInfo","boardSizeX","fillStyle","fillRect","fillText","clear","clearRect","boardSizeY","strokeStyle","lineWidth","beginPath","i","moveTo","lineTo","stroke","action","e","typeClick","preventDefault","rect","getBoundingClientRect","clientX","left","clientY","coord","actionTypeDefuse","hasOwnProperty","emitter","emit","alertValue","createRef","forEach","localStorage","getItem","emitterUnsubGame","sub","data","type","prevState","newScore","Object","assign","roundStarted","updateScore","currentPlayer","cell","cells","conterCells","keys","length","countCells","savedData","parsedSavedData","JSON","parse","scoreSum","item","setItem","stringify","sapperStyle","button","highlite","ref","onContextMenu","width","height"],"mappings":"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","file":"static/js/5.90a11064.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from '../../../static/css/score.module.css'\r\n/*\r\n  displayCurrentPlayer - Выделить текущего игрока\r\n  paused - Останавливает/Включает таймер\r\n  queue - Последовательность игроков к которым применяется\r\n  players - Массив игроков ex: [{\"userId\":\"11\", \"userName\": \"eeee\r\n  currentPlayerTurn - Текщий игрок\r\n  playerNumber - Игрок (не ставить если гость)\r\n  timeTurn - Время на совершение хода \r\n  lasttime - Время начала хода ()\r\n  score - Счёт ex: [[0,0,0], [1,0,0]]\r\n  scoreItemNames - Названия столбцов ex: ['Счёт', 'Осталось', 'Найдено']\r\n*/\r\nexport default class Scoreboard extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      timeleft: ~~((props.timeTurn + props.lasttime - Date.now())/1000),\r\n    }\r\n    this.playerTurnTimer = undefined\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.displayCurrentPlayer) this.playerTurnTimer = setInterval(() => this.paused?null:this.setState({timeleft: ~~((this.props.timeTurn + this.props.lasttime - Date.now())/1000)}), 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.props.displayCurrentPlayer) clearInterval(this.playerTurnTimer)\r\n  }\r\n  getPlayersList = () => {\r\n    const sortedPlayersArray = []\r\n    if (this.props.queue!==undefined){\r\n      for (let numberInQueue of this.props.queue) {\r\n        sortedPlayersArray.push(this.props.players[numberInQueue])\r\n      }\r\n    } else Array.prototype.push.apply(sortedPlayersArray,this.props.players)\r\n    \r\n    return sortedPlayersArray.map((player, index) => \r\n    <div style={{color: !player.connected?\"rgb(150,150,150)\":this.props.playerNumber===index?\"rgb(255,165,0)\":\"#000\"}}>\r\n      <div>\r\n        <div>{index+1}</div>\r\n        <div>#{player.userId}</div>\r\n        <div>{player.userName}</div>\r\n      </div>\r\n      {this.props.score[index].map(prop=>\r\n      <div>{prop}</div>\r\n      )}\r\n    </div>\r\n    )\r\n  }\r\n  render() {\r\n    const scoreColor = `rgb(${255 - this.state.timeleft/(this.props.timeTurn/1000)*255}, ${this.state.timeleft/(this.props.timeTurn/1000)*200}, 0)`\r\n      return (\r\n              <div className={styles.score}>\r\n                <div>\r\n                  <div>Игроки</div>\r\n                  {this.props.scoreItemNames.map(itemName=>\r\n                    <div>{itemName}</div>\r\n                    )}\r\n                </div>\r\n                {this.props.displayCurrentPlayer?\r\n                <div className={styles.scoreCurrentPlayer} style={{color: scoreColor, top: 25 + this.props.currentPlayerTurn*42+'px', backgroundColor: scoreColor}}>\r\n                  <div>{this.state.timeleft}</div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                </div>\r\n                :<div></div>\r\n                }\r\n                \r\n                {this.getPlayersList()}\r\n              </div>\r\n      )\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"score_score__1Slqo\",\"scoreCurrentPlayer\":\"score_scoreCurrentPlayer__36TAD\"};","import React from 'react';\r\nimport styles from '../../../static/css/alert.module.css'\r\n\r\nexport default class Alert extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n  }\r\n  shouldComponentUpdate = () => {\r\n    this.alertDisplay = true\r\n    if (this.alertTimeoutDestroy!==undefined) {\r\n      clearTimeout(this.alertTimeoutDestroy)\r\n    }\r\n    this.alertTimeoutDestroy = setTimeout(() => {\r\n      this.alertDisplay = false\r\n      this.alertTimeoutDestroy = undefined\r\n      this.forceUpdate()\r\n    }, 3000)\r\n    return true\r\n  }\r\n  alertHide = () => {\r\n    clearTimeout(this.alertTimeoutDestroy)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n    this.forceUpdate()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`${styles.alert} ${this.alertDisplay?styles.alertDisplay:''}`}>\r\n        <div onClick={this.alertHide}>\r\n          {this.props.value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__285A5\",\"alertDisplay\":\"alert_alertDisplay__3muLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__1xjwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"sapper_button__38G-W\",\"highlite\":\"sapper_highlite__1xyk1\"};","import React from 'react'\r\nimport Scoreboard from './parts/Scoreboard'\r\nimport Alert from './parts/Alert'\r\n\r\nimport styles from '../../static/css/canvas.module.css'\r\nimport sapperStyle from '../../static/css/sapper.module.css'\r\n\r\nexport default class Tictactoe extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      score: props.gameInfo.score,\r\n      alertValue: \"\", \r\n      lasttime: props.gameInfo.lasttime,\r\n      actionTypeDefuse: true\r\n    }\r\n    this.canvas = React.createRef()\r\n  }\r\n  componentWillMount() {\r\n    this.paused = this.props.gameInfo.paused\r\n    this.board = {}\r\n    this.props.players.forEach((player, index) => player.userId=== +localStorage.getItem('userId')?this.playerNumber = index:null)\r\n    \r\n    this.emitterUnsubGame = this.props.emitter.sub('game', data => {\r\n      switch(data.type) {\r\n        case 'roundStarted': \r\n          this.setState(prevState=>{\r\n            const newScore = Object.assign(prevState.score)\r\n            for(let index in prevState.score) {\r\n              newScore[index][1]=0\r\n            }\r\n            return {\r\n              roundStarted: data.roundStarted,\r\n              score: newScore,\r\n              alertValue: `Раунд начинается!`\r\n            }\r\n          })\r\n          this.paused = false\r\n          this.board = {}\r\n          this.clear()\r\n          break\r\n        case 'roundFinished': {\r\n            this.paused = true\r\n            const updateScore = this.state.score[data.currentPlayer][0]++\r\n            this.setState(prevState => ({\r\n                score: {...prevState.score, ...updateScore},\r\n                alertValue: `Раунд завершён! Победил ${this.props.players[data.currentPlayer].userName}`\r\n            }))\r\n          break\r\n        }\r\n        case 'openedCells': {\r\n          for (let cell in data.cells) {\r\n            this.displayPoint(cell%this.props.gameInfo.boardSizeX, ~~(cell/this.props.gameInfo.boardSizeX), data.cells[cell])\r\n          }\r\n          const conterCells = this.state.score[this.playerNumber][1]+Object.keys(data.cells).length\r\n          this.setState(prevState => {\r\n            const newScore = Object.assign(prevState.score)\r\n            newScore[this.playerNumber][1]=conterCells\r\n            return {score: newScore}\r\n          })\r\n          break\r\n        }\r\n        case 'explode': \r\n          this.displayPoint(data.x, data.y, -2)\r\n          this.setState({alertValue: `${this.props.players[data.currentPlayer].userName} взорвался`})\r\n          break\r\n        case 'progress': {\r\n        const conterCells = this.state.score[data.currentPlayer][1]+data.countCells\r\n        this.setState(prevState =>  {\r\n          const newScore = Object.assign(prevState.score)\r\n          newScore[data.currentPlayer][1]=conterCells\r\n          return {score: newScore}})\r\n          break \r\n        }\r\n        case 'error': \r\n          break\r\n        case 'matchFinished': \r\n          this.setState({alertValue: `Матч завершён. Победил ${this.props.players[data.currentPlayer].userName}`})\r\n          break\r\n        default: break\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.clear()\r\n    const savedData = localStorage.getItem('sapperData')\r\n    if (!savedData==\"\") {\r\n      const parsedSavedData = JSON.parse(savedData)\r\n      let scoreSum = 0\r\n      for (let item in this.state.score) {\r\n        scoreSum+=this.state.score[item][0]\r\n      }\r\n      if (parsedSavedData.scoreSum===scoreSum) {\r\n        for (let cell in parsedSavedData.board) {\r\n          this.displayPoint(cell%this.props.gameInfo.boardSizeX, ~~(cell/this.props.gameInfo.boardSizeX), parsedSavedData.board[cell])\r\n          \r\n        }\r\n      } else {}\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    let scoreSum = 0 //Идентификатор текущего раунда на случай вылета\r\n    for (let item in this.state.score) {\r\n      scoreSum+=this.state.score[item][0]\r\n    }\r\n    const savedData = {scoreSum, board: this.board}\r\n    localStorage.setItem('sapperData', JSON.stringify(savedData))\r\n    this.emitterUnsubGame()\r\n  }\r\n\r\n  displayPoint = (x, y, value) => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.font = \"24px serif\"\r\n    if (value!==undefined) this.board[this.props.gameInfo.boardSizeX*y + x] = value\r\n    switch (value) {\r\n      case -2: { //explosion\r\n        ctx.fillStyle=\"red\"\r\n        ctx.fillRect(x*25, y*25, 25, 25)\r\n        break}\r\n      case -1: { //highlight a bomb\r\n        ctx.fillStyle=\"green\"\r\n        ctx.fillRect(x*25, y*25, 25, 25)\r\n        break}\r\n      case undefined: { //clear a cell\r\n        ctx.fillStyle=\"gray\"\r\n        ctx.fillRect(x*25, y*25, 25, 25)\r\n        delete this.board[this.props.gameInfo.boardSizeX*y + x]\r\n        break}\r\n      case 0: ctx.fillStyle=\"white\"; break\r\n      case 1: ctx.fillStyle=\"blue\"; break\r\n      case 2: ctx.fillStyle=\"green\"; break\r\n      case 3: ctx.fillStyle=\"red\"; break\r\n      case 4: ctx.fillStyle=\"blue\"; break\r\n      case 5: ctx.fillStyle=\"brown\"; break\r\n      case 6: ctx.fillStyle=\"aqua\"; break\r\n      case 7: ctx.fillStyle=\"yellow\"; break\r\n      case 8: ctx.fillStyle=\"brown\"; break\r\n      default: ;break\r\n    }\r\n    if (value>0) ctx.fillText(value, x*25+7, y*25+20)\r\n    if (value===0) ctx.fillRect(x*25, y*25, 25, 25)\r\n  }\r\n  clear = () => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.clearRect(0,0,(this.props.gameInfo.boardSizeX+1)*25, (this.props.gameInfo.boardSizeY+1)*25)\r\n    ctx.strokeStyle = '#000'\r\n    ctx.lineWidth = 1\r\n    ctx.beginPath();\r\n    for(let i = 0; i <= this.props.gameInfo.boardSizeX; i++) {\r\n      ctx.moveTo(i*25, 0)\r\n      ctx.lineTo(i*25, this.props.gameInfo.boardSizeY*25)\r\n    }\r\n    for(let i = 0; i <= this.props.gameInfo.boardSizeY; i++) {\r\n      ctx.moveTo(0, i*25)\r\n      ctx.lineTo(this.props.gameInfo.boardSizeX*25, i*25)\r\n    }\r\n    ctx.stroke()\r\n\r\n  }\r\n  action = (e, typeClick) => {\r\n    e.preventDefault()\r\n    if (this.paused) return\r\n    const rect = this.canvas.current.getBoundingClientRect()\r\n    const x = ~~((e.clientX - rect.left)/25)\r\n    const y = ~~((e.clientY - rect.top)/25)\r\n    const coord = y*this.props.gameInfo.boardSizeX+x\r\n    if (this.state.actionTypeDefuse&&typeClick===\"left\") {\r\n      if (!this.board.hasOwnProperty(coord)) {\r\n        this.props.emitter.emit('action', {x: x, y: y})\r\n      }\r\n    } else {//Пометить ячейку как заминированную\r\n      if (this.board[coord]===undefined||this.board[coord]===-1) this.displayPoint(x, y, this.board[coord]===-1?undefined: -1)\r\n    }\r\n  }\r\n  render() {\r\n      return (\r\n            <>\r\n              <Scoreboard displayCurrentPlayer={false}\r\n                paused={this.paused}\r\n                players={this.props.players} \r\n                playerNumber={this.playerNumber} \r\n                score={this.state.score}\r\n                scoreItemNames={['Счёт', 'Прогресс']}\r\n              />\r\n\r\n              <Alert value={this.state.alertValue} />\r\n              <div className={`${sapperStyle.button} ${this.state.actionTypeDefuse?\"\":sapperStyle.highlite}`} \r\n                onClick={() => this.setState({actionTypeDefuse: this.state.actionTypeDefuse?false:true})} >\r\n              </div>\r\n              <div className={styles.canvas}>\r\n                <canvas ref={this.canvas} \r\n                  onClick={(e) => this.action(e, \"left\")} \r\n                  onContextMenu={(e) => this.action(e, \"right\")} \r\n                  width={(+this.props.gameInfo.boardSizeX)*25+1} \r\n                  height={(+this.props.gameInfo.boardSizeY)*25+1}>\r\n                </canvas> \r\n              </div>\r\n            </>\r\n      )\r\n  }\r\n}\r\n"],"sourceRoot":""}