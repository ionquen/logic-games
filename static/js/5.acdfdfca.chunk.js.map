{"version":3,"sources":["components/parts/Scoreboard.js","static/css/score.module.css","components/parts/Alert.js","static/css/alert.module.css","components/parts/Ruler.js","components/parts/InfoBlock.js","static/css/canvas.module.css","static/css/minesweeper.module.css","static/img/minesweeper/games_sapper-cell.svg","static/img/minesweeper/games_sapper-clear.svg","static/img/minesweeper/games_sapper-flag.svg","static/img/minesweeper/games_sapper-bomb.svg","components/games/Minesweeper.js"],"names":["Scoreboard","props","getPlayersList","sortedPlayersArray","undefined","queue","numberInQueue","push","players","Array","prototype","apply","map","player","index","style","color","connected","playerNumber","userId","userName","score","prop","state","timeleft","timeTurn","lasttime","Date","now","playerTurnTimer","this","displayCurrentPlayer","setInterval","paused","newTimeleft","setState","clearInterval","scoreColor","className","styles","scoreItemNames","itemName","scoreCurrentPlayer","top","currentPlayerTurn","backgroundColor","React","Component","module","exports","Alert","shouldComponentUpdate","nextProps","value","alertDisplay","alertTimeoutDestroy","clearTimeout","setTimeout","forceUpdate","alertHide","alert","onClick","Ruler","getListByLength","length","section","i","countX","countY","InfoBlock","data","Tictactoe","displayPoint","x","y","ctx","canvas","current","getContext","font","board","gameInfo","boardSizeX","cellFlagIcon","Image","src","IconFlag","onload","drawImage","cellClosedIcon","IconClosed","cellBombIcon","IconBomb","cellOpenedIcon","IconOpened","fillStyle","fillText","clear","clearRect","boardSizeY","strokeStyle","lineWidth","beginPath","j","action","e","typeClick","preventDefault","rect","getBoundingClientRect","clientX","left","clientY","coord","actionTypeDefuse","hasOwnProperty","emitter","emit","cell","alertValue","createRef","forEach","localStorage","getItem","emitterUnsubGame","sub","type","prevState","newScore","Object","assign","roundStarted","updateScore","currentPlayer","cells","conterCells","keys","Number","countCells","savedData","parsedSavedData","JSON","parse","scoreSum","item","setItem","stringify","info","roundsForWin","minesCount","cellsForWin","sapperStyle","button","highlite","ref","onContextMenu","width","height","ruler","ruler24"],"mappings":"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","file":"static/js/5.acdfdfca.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from '../../static/css/score.module.css'\r\n/*\r\n  displayCurrentPlayer - Выделить текущего игрока\r\n  paused - Останавливает/Включает таймер\r\n  queue - Последовательность игроков к которым применяется\r\n  players - Массив игроков ex: [{\"userId\":\"11\", \"userName\": \"eeee\r\n  currentPlayerTurn - Текщий игрок\r\n  playerNumber - Игрок (не ставить если гость)\r\n  timeTurn - Время на совершение хода \r\n  lasttime - Время начала хода ()\r\n  score - Счёт ex: [[0,0,0], [1,0,0]]\r\n  scoreItemNames - Названия столбцов ex: ['Счёт', 'Осталось', 'Найдено']\r\n*/\r\nexport default class Scoreboard extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      timeleft: ~~((props.timeTurn + props.lasttime - Date.now())/1000),\r\n    }\r\n    this.playerTurnTimer = undefined\r\n  }\r\n  componentDidMount() {\r\n    //Отображение оставшегося времени у игрока\r\n    if (this.props.displayCurrentPlayer) this.playerTurnTimer = setInterval(() => {\r\n      if (!this.paused) {\r\n        const newTimeleft = ~~((this.props.timeTurn + this.props.lasttime - Date.now())/1000)\r\n        this.setState({timeleft: newTimeleft})\r\n      }\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.props.displayCurrentPlayer) clearInterval(this.playerTurnTimer)\r\n  }\r\n  getPlayersList = () => {\r\n    const sortedPlayersArray = []\r\n    if (this.props.queue!==undefined){\r\n      for (let numberInQueue of this.props.queue) {\r\n        sortedPlayersArray.push(this.props.players[numberInQueue])\r\n      }\r\n    } else Array.prototype.push.apply(sortedPlayersArray,this.props.players)\r\n    \r\n    return sortedPlayersArray.map((player, index) => \r\n    <div style={{color: !player.connected?\"rgb(150,150,150)\":this.props.playerNumber===index?\"rgb(255,165,0)\":\"#000\"}}>\r\n      <div>\r\n        <div>{index+1}</div>\r\n        <div>#{player.userId}</div>\r\n        <div>{player.userName}</div>\r\n      </div>\r\n      {this.props.score[index].map(prop=>\r\n      <div>{prop}</div>\r\n      )}\r\n    </div>\r\n    )\r\n  }\r\n  render() {\r\n    const scoreColor = `rgb(${255 - this.state.timeleft/(this.props.timeTurn/1000)*255}, ${this.state.timeleft/(this.props.timeTurn/1000)*200}, 0)`\r\n      return (\r\n              <div className={styles.score}>\r\n                <div>\r\n                  <div>Игроки</div>\r\n                  {this.props.scoreItemNames.map(itemName=>\r\n                    <div>{itemName}</div>\r\n                    )}\r\n                </div>\r\n                {this.props.displayCurrentPlayer?\r\n                <div className={styles.scoreCurrentPlayer} style={{color: scoreColor, top: 30 + this.props.currentPlayerTurn*42+'px', backgroundColor: scoreColor}}>\r\n                  <div>{this.state.timeleft}</div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                </div>\r\n                :<div></div>\r\n                }\r\n                \r\n                {this.getPlayersList()}\r\n              </div>\r\n      )\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"score_score__1Slqo\",\"scoreCurrentPlayer\":\"score_scoreCurrentPlayer__36TAD\"};","import React from 'react'\r\nimport styles from '../../static/css/alert.module.css'\r\n\r\nexport default class Alert extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n  }\r\n  shouldComponentUpdate = (nextProps) => {\r\n    if (nextProps.value===this.props.value) return false\r\n    this.alertDisplay = true\r\n    if (this.alertTimeoutDestroy!==undefined) {\r\n      clearTimeout(this.alertTimeoutDestroy)\r\n    }\r\n    this.alertTimeoutDestroy = setTimeout(() => {\r\n      this.alertDisplay = false\r\n      this.alertTimeoutDestroy = undefined\r\n      this.forceUpdate()\r\n    }, 3000)\r\n    return true\r\n  }\r\n  alertHide = () => {\r\n    clearTimeout(this.alertTimeoutDestroy)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n    this.forceUpdate()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`${styles.alert} ${this.alertDisplay?styles.alertDisplay:''}`}>\r\n        <div onClick={this.alertHide}>\r\n          {this.props.value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__285A5\",\"alertDisplay\":\"alert_alertDisplay__3muLT\"};","import React from 'react'\r\nexport default function Ruler(props) {\r\n  function getListByLength(length) {\r\n    let section = []\r\n    for(let i = 0; i < length; i++) {\r\n      section.push(<li></li>)\r\n    }\r\n    return section\r\n  }\r\n  return (\r\n    <div className={props.className} >\r\n        <ol>\r\n          {getListByLength(props.countX)}\r\n        </ol>\r\n        <ol>\r\n          {getListByLength(props.countY)}\r\n        </ol>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nexport default function InfoBlock(props) {\r\n  return (\r\n    <div className={props.className} >\r\n      {props.data.map(prop => <div><span>{prop[0]}</span><span> {prop[1]}</span></div>) }\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__1xjwk\",\"ruler\":\"canvas_ruler__3jpTN\",\"info\":\"canvas_info__larj0\",\"ruler24\":\"canvas_ruler24__2YnvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"minesweeper_button__3nJtR\",\"highlite\":\"minesweeper_highlite__2SRZT\"};","export default __webpack_public_path__ + \"static/media/games_sapper-cell.53f01d61.svg\";","export default __webpack_public_path__ + \"static/media/games_sapper-clear.35ecb60d.svg\";","export default __webpack_public_path__ + \"static/media/games_sapper-flag.5ae1eabd.svg\";","export default __webpack_public_path__ + \"static/media/games_sapper-bomb.86bfacec.svg\";","import React from 'react'\r\nimport Scoreboard from '../parts/Scoreboard'\r\nimport Alert from '../parts/Alert'\r\nimport Ruler from '../parts/Ruler'\r\nimport InfoBlock from '../parts/InfoBlock'\r\n\r\nimport styles from '../../static/css/canvas.module.css'\r\nimport sapperStyle from '../../static/css/minesweeper.module.css'\r\n\r\nimport IconClosed from '../../static/img/minesweeper/games_sapper-cell.svg'\r\nimport IconOpened from '../../static/img/minesweeper/games_sapper-clear.svg'\r\nimport IconFlag from '../../static/img/minesweeper/games_sapper-flag.svg'\r\nimport IconBomb from '../../static/img/minesweeper/games_sapper-bomb.svg'\r\n\r\nexport default class Tictactoe extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      score: props.gameInfo.score,\r\n      alertValue: \"\", \r\n      actionTypeDefuse: true\r\n    }\r\n    this.canvas = React.createRef()\r\n  }\r\n  componentWillMount() {\r\n    this.paused = this.props.gameInfo.paused\r\n    this.board = {}\r\n    this.props.players.forEach((player, index) => player.userId===localStorage.getItem('userId')?this.playerNumber = index:null)\r\n    \r\n    this.emitterUnsubGame = this.props.emitter.sub('game', data => {\r\n      switch(data.type) {\r\n        case 'roundStarted': \r\n          this.setState(prevState=>{\r\n            const newScore = Object.assign(prevState.score)\r\n            for(let index in prevState.score) {\r\n              newScore[index][1]=0\r\n            }\r\n            return {\r\n              roundStarted: data.roundStarted,\r\n              score: newScore,\r\n              alertValue: `Раунд начинается!`\r\n            }\r\n          })\r\n          this.paused = false\r\n          this.board = {}\r\n          this.clear()\r\n          break\r\n        case 'roundFinished': {\r\n            this.paused = true\r\n            const updateScore = this.state.score[data.currentPlayer][0]+1\r\n            this.setState(prevState => ({\r\n                score: {...prevState.score, ...updateScore},\r\n                alertValue: `Раунд завершён! Победил ${this.props.players[data.currentPlayer].userName}`\r\n            }))\r\n          break\r\n        }\r\n        case 'openedCells': {\r\n          for (let cell in data.cells) {\r\n            this.displayPoint(cell%this.props.gameInfo.boardSizeX, ~~(cell/this.props.gameInfo.boardSizeX), data.cells[cell])\r\n          }\r\n          const conterCells = this.state.score[this.playerNumber][1]+Object.keys(data.cells).length\r\n          this.setState(prevState => {\r\n            const newScore = Object.assign(prevState.score)\r\n            newScore[this.playerNumber][1]=conterCells\r\n            return {score: newScore}\r\n          })\r\n          break\r\n        }\r\n        case 'explode': \r\n          if (this.playerNumber===Number(data.currentPlayer)) this.displayPoint(data.cell%this.props.gameInfo.boardSizeX, ~~(data.cell/this.props.gameInfo.boardSizeX), 9)\r\n          this.setState({alertValue: `${this.props.players[data.currentPlayer].userName} взорвался`})\r\n          break\r\n        case 'progress': {\r\n        const conterCells = this.state.score[data.currentPlayer][1]+data.countCells\r\n        this.setState(prevState =>  {\r\n          const newScore = Object.assign(prevState.score)\r\n          newScore[data.currentPlayer][1]=conterCells\r\n          return {score: newScore}})\r\n          break \r\n        }\r\n        case 'error': \r\n          break\r\n        case 'matchFinished': \r\n          this.setState({alertValue: `Матч завершён. Победил ${this.props.players[Number(data.currentPlayer)].userName}`})\r\n          break\r\n        default: break\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.clear()\r\n    const savedData = localStorage.getItem('sapperData')\r\n    //Получение сохранённого состояния поля\r\n    if (!savedData===\"\") {\r\n      const parsedSavedData = JSON.parse(savedData)\r\n      let scoreSum = 0\r\n      for (let item in this.state.score) {\r\n        scoreSum+=this.state.score[item][0]\r\n      }\r\n      if (parsedSavedData.scoreSum===scoreSum) {\r\n        for (let cell in parsedSavedData.board) {\r\n          this.displayPoint(cell%this.props.gameInfo.boardSizeX, ~~(cell/this.props.gameInfo.boardSizeX), parsedSavedData.board[cell])\r\n          \r\n        }\r\n      } else {}\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    //Сохранение текущего состояния поля на случай вылета\r\n    let scoreSum = 0 \r\n    for (let item in this.state.score) {\r\n      scoreSum+=this.state.score[item][0]\r\n    }\r\n    const savedData = {scoreSum, board: this.board}\r\n    localStorage.setItem('sapperData', JSON.stringify(savedData))\r\n    this.emitterUnsubGame()\r\n  }\r\n\r\n  displayPoint = (x, y, value) => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.font = \"800 24px inter\"\r\n    if (value!==undefined) this.board[this.props.gameInfo.boardSizeX*y + x] = value\r\n    switch (value) {\r\n      case -1: { //highlight the bomb\r\n        const cellFlagIcon = new Image()\r\n        cellFlagIcon.src = IconFlag\r\n        cellFlagIcon.onload = () => {\r\n          ctx.drawImage(cellFlagIcon, x*25, y*25, 25, 25)\r\n        }\r\n        break}\r\n      case undefined: { //clear a cell\r\n        const cellClosedIcon = new Image()\r\n        cellClosedIcon.src = IconClosed\r\n        cellClosedIcon.onload = () => {\r\n          ctx.drawImage(cellClosedIcon, x*25, y*25, 25, 25)\r\n          delete this.board[this.props.gameInfo.boardSizeX*y + x]\r\n        }\r\n        break}\r\n      case 9: { \r\n        const cellBombIcon = new Image()\r\n        cellBombIcon.src = IconBomb\r\n        cellBombIcon.onload = () => {\r\n          ctx.drawImage(cellBombIcon, x*25, y*25, 25, 25)\r\n        }\r\n        break}\r\n      default: break\r\n    }\r\n    if (value>=0&&value<9) {\r\n      const cellOpenedIcon = new Image()\r\n      cellOpenedIcon.src = IconOpened\r\n      cellOpenedIcon.onload = () => {\r\n        switch (value) {\r\n          case 1: ctx.fillStyle=\"blue\"; break\r\n          case 2: ctx.fillStyle=\"green\"; break\r\n          case 3: ctx.fillStyle=\"red\"; break\r\n          case 4: ctx.fillStyle=\"blue\"; break\r\n          case 5: ctx.fillStyle=\"brown\"; break\r\n          case 6: ctx.fillStyle=\"aqua\"; break\r\n          case 7: ctx.fillStyle=\"yellow\"; break\r\n          case 8: ctx.fillStyle=\"brown\"; break\r\n          default: break\r\n        }\r\n        ctx.drawImage(cellOpenedIcon, x*25, y*25, 25, 25)\r\n        if (value>0) ctx.fillText(value, x*25+5, y*25+22)\r\n      }\r\n    }\r\n  }\r\n  clear = () => {\r\n    const cellClosedIcon = new Image()\r\n    cellClosedIcon.src = IconClosed\r\n    cellClosedIcon.onload = () => {\r\n      const ctx = this.canvas.current.getContext('2d')\r\n      ctx.clearRect(0,0,(this.props.gameInfo.boardSizeX+1)*25, (this.props.gameInfo.boardSizeY+1)*25)\r\n      ctx.strokeStyle = '#000'\r\n      ctx.lineWidth = 1\r\n      ctx.beginPath();\r\n      for(let i = 0; i < this.props.gameInfo.boardSizeX; i++) {\r\n        for (let j = 0; j <this.props.gameInfo.boardSizeY; j++) {\r\n          ctx.drawImage(cellClosedIcon, i*25, j*25, 25, 25)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  action = (e, typeClick) => {\r\n    e.preventDefault()\r\n    if (this.paused) return\r\n    const rect = this.canvas.current.getBoundingClientRect()\r\n    const x = ~~((e.clientX - rect.left)/25)\r\n    const y = ~~((e.clientY - rect.top)/25)\r\n    const coord = y*this.props.gameInfo.boardSizeX+x\r\n    if (this.state.actionTypeDefuse&&typeClick===\"left\") {\r\n      if (!this.board.hasOwnProperty(coord)) {\r\n        this.props.emitter.emit('action', {cell: coord})\r\n      }\r\n    } else {//Пометить ячейку как заминированную\r\n      if (this.board[coord]===undefined||this.board[coord]===-1) this.displayPoint(x, y, this.board[coord]===-1?undefined: -1)\r\n    }\r\n  }\r\n  render() {\r\n      return (\r\n            <>\r\n              <Scoreboard displayCurrentPlayer={false}\r\n                paused={this.paused}\r\n                players={this.props.players} \r\n                playerNumber={this.playerNumber} \r\n                score={this.state.score}\r\n                scoreItemNames={['Счёт', 'Прогресс']}\r\n              />\r\n              \r\n              <InfoBlock className={styles.info} \r\n                data={[\r\n                  ['Раундов', this.props.gameInfo.roundsForWin], \r\n                  ['Высота поля', this.props.gameInfo.boardSizeX], \r\n                  ['Ширина поля', this.props.gameInfo.boardSizeX], \r\n                  ['Количество мин', this.props.gameInfo.minesCount], \r\n                  ['Ячеек для победы', this.props.gameInfo.cellsForWin], \r\n                ]}\r\n              />\r\n              <Alert value={this.state.alertValue} />\r\n              <div className={`${sapperStyle.button} ${this.state.actionTypeDefuse?\"\":sapperStyle.highlite}`} \r\n                onClick={() => this.setState({actionTypeDefuse: this.state.actionTypeDefuse?false:true})} >\r\n              </div>\r\n              <div className={styles.canvas}>\r\n                <canvas ref={this.canvas} \r\n                  onClick={(e) => this.action(e, \"left\")} \r\n                  onContextMenu={(e) => this.action(e, \"right\")} \r\n                  width={(+this.props.gameInfo.boardSizeX)*25+1} \r\n                  height={(+this.props.gameInfo.boardSizeY)*25+1}>\r\n                </canvas> \r\n                <Ruler className={`${styles.ruler} ${styles.ruler24}`}  \r\n                  countX={this.props.gameInfo.boardSizeX} \r\n                  countY={this.props.gameInfo.boardSizeY}\r\n                  />\r\n              </div>\r\n            </>\r\n      )\r\n  }\r\n}\r\n"],"sourceRoot":""}