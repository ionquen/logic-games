{"version":3,"sources":["components/games/parts/CanvasTools.js","components/games/Tictactoe.js","components/games/parts/Scoreboard.js","static/css/score.module.css","components/games/parts/Alert.js","static/css/alert.module.css","components/games/parts/Ruler.js","static/css/canvas.module.css"],"names":["animate","animRenderF","time","animStart","window","requestAnimationFrame","animStep","timestamp","animCurrentTime","Tictactoe","props","displayPoint","value","x","y","animation","ctx","canvas","current","getContext","lineCap","lineWidth","currentBoard","gameInfo","boardSize","fillStyle","strokeStyle","clearRect","fillRect","fill","beginPath","coordFirstLine","Math","floor","moveTo","lineTo","coordSecondLine","stroke","arc","PI","clear","i","actionTurn","e","paused","playerNumber","state","currentPlayerTurn","setState","alertValue","rect","getBoundingClientRect","clientX","left","clientY","top","hasOwnProperty","emitter","emit","score","lasttime","players","every","player","index","userId","localStorage","getItem","queue","queuePlayer","queueIndex","React","createRef","this","emitterUnsubGame","sub","data","type","userName","cell","newScore","prevState","nextPlayer","cellNumber","Scoreboard","displayCurrentPlayer","timeTurn","scoreItemNames","Alert","className","styles","ref","onClick","width","height","Ruler","ruler","countY","countX","Component","getPlayersList","sortedPlayersArray","undefined","numberInQueue","push","Array","prototype","apply","map","style","color","connected","prop","timeleft","Date","now","playerTurnTimer","setInterval","newTimeleft","clearInterval","scoreColor","itemName","scoreCurrentPlayer","backgroundColor","module","exports","shouldComponentUpdate","nextProps","alertDisplay","alertTimeoutDestroy","clearTimeout","setTimeout","forceUpdate","alertHide","alert","getListByLength","length","section"],"mappings":"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","file":"static/js/6.0f4ea81c.chunk.js","sourcesContent":["function animate(animRenderF, time) {\r\n  let animStart = null\r\n  const animStep = timestamp => {\r\n    if (!animStart) animStart=timestamp\r\n    const animCurrentTime = timestamp - animStart\r\n    animRenderF(animCurrentTime)\r\n    if (animCurrentTime<time) window.requestAnimationFrame(animStep)\r\n  }      \r\n  window.requestAnimationFrame(animStep)\r\n}\r\nexport {animate}","import React from 'react'\r\nimport Scoreboard from './parts/Scoreboard'\r\nimport Alert from './parts/Alert'\r\nimport Ruler from './parts/Ruler'\r\nimport {animate} from './parts/CanvasTools'\r\n\r\nimport styles from '../../static/css/canvas.module.css'\r\n\r\nexport default class Tictactoe extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n\t\t\tcurrentPlayerTurn: props.gameInfo.currentPlayerTurn,\r\n      score: props.gameInfo.score,\r\n      alertValue: \"\", \r\n      lasttime: props.gameInfo.lasttime\r\n    }\r\n    this.currentBoard = props.gameInfo.currentBoard\r\n    this.paused = props.gameInfo.paused\r\n    props.players.every((player, index) => player.userId!== +localStorage.getItem('userId')?true:props.gameInfo.queue.every((queuePlayer, queueIndex) => {\r\n        if (queuePlayer===index) {\r\n        this.playerNumber = queueIndex\r\n        return false\r\n      } else return true\r\n    }))\r\n    this.canvas = React.createRef()\r\n  }\r\n  componentWillMount() {\r\n    this.emitterUnsubGame = this.props.emitter.sub('game', data => {\r\n      switch(data.type) {\r\n        case 'roundStarted': \r\n          this.setState({\r\n            currentPlayerTurn: data.currentPlayerTurn,\r\n            lasttime: data.lasttime,\r\n            alertValue: `Раунд начинается c хода ${this.props.players[this.props.gameInfo.queue[data.currentPlayerTurn]].userName}!`\r\n          })\r\n          this.paused = false\r\n          this.currentBoard = {}\r\n          this.clear()\r\n          break\r\n        case 'roundFinished': \r\n          this.paused = true\r\n          this.displayPoint(data.cell, data.x, data.y, true)\r\n          const newScore = this.state.score[data.cell][0]++\r\n          this.setState((prevState) => ({\r\n            currentPlayerTurn: data.nextPlayer, \r\n            score: {...prevState.score, ...newScore}, \r\n            lasttime: data.lasttime, \r\n            alertValue: `Раунд завершён! Победил ${this.props.players[this.props.gameInfo.queue[data.cell]].userName}`}))\r\n          break\r\n        case 'turn': \r\n          this.setState({currentPlayerTurn: data.nextPlayer, lasttime: data.lasttime, alertValue: `Ход игрока ${this.props.players[this.props.gameInfo.queue[data.nextPlayer]].userName}`})\r\n          this.displayPoint(data.cell, data.x, data.y, true)\r\n          break\r\n        case 'error': \r\n          this.displayPoint(data.cell, data.x, data.y)\r\n          break\r\n        case 'matchFinished': \r\n          this.setState({alertValue: `Матч завершён. Победил ${this.props.players[this.props.gameInfo.queue[data.currentPlayerTurn]].userName}`})\r\n          break\r\n        case 'nextPlayer': \r\n          if (this.state.currentPlayerTurn===this.playerNumber) this.setState({alertValue: 'Вы пропустили ход'})\r\n          else this.setState({alertValue: 'Оппонент пропустил ход'})\r\n          this.setState({currentPlayerTurn: data.nextPlayer, lasttime: data.lasttime})\r\n          break\r\n        default: break\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n      this.clear()\r\n      for (let cellNumber in this.currentBoard) {\r\n        this.displayPoint(this.currentBoard[cellNumber], cellNumber%this.props.gameInfo.boardSize, ~~(cellNumber/this.props.gameInfo.boardSize))\r\n      }\r\n  }\r\n  componentWillUnmount() {\r\n    this.emitterUnsubGame()\r\n  }\r\n\r\n  displayPoint = (value, x, y, animation=false) => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.lineCap = \"round\"\r\n    ctx.lineWidth = 3\r\n    this.currentBoard[this.props.gameInfo.boardSize*y + x] = value\r\n    if (animation===true) {\r\n      switch (value) {\r\n        case 0: \r\n          animate(timestamp => {\r\n            ctx.fillStyle = `rgba(200,200,255, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.strokeStyle = \"blue\"\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.beginPath()\r\n            const coordFirstLine = Math.floor((timestamp<300?timestamp:300)/16)\r\n            ctx.moveTo(x*30+6, y*30+6)\r\n            ctx.lineTo(x*30+6+coordFirstLine, y*30+6+coordFirstLine)\r\n            if (timestamp>300) {\r\n              const coordSecondLine = Math.floor((timestamp<600?timestamp-300:300)/16)\r\n              ctx.moveTo(x*30+24, y*30+6)\r\n              ctx.lineTo(x*30+24-coordSecondLine, y*30+6+coordSecondLine)\r\n            }\r\n            ctx.stroke()\r\n          }, 3000)\r\n        break\r\n        case 1: \r\n          animate(timestamp => {\r\n            ctx.fillStyle = `rgba(255,200,200, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.strokeStyle = \"red\"\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.beginPath()\r\n            ctx.arc(x*30+15, y*30+15, 9, 0,-Math.PI*(timestamp<600?timestamp/300:2), true)\r\n            ctx.stroke()\r\n          }, 3000)\r\n        break\r\n        case 2: \r\n          animate(timestamp => {\r\n            ctx.fillStyle = `rgba(200,255,200, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.fillStyle = \"green\"\r\n            ctx.beginPath()\r\n            ctx.arc(x*30+15, y*30+15, timestamp<600?timestamp/85:7, 0, Math.PI*2, true)\r\n            ctx.fill()\r\n          }, 3000)\r\n        break\r\n        default: break\r\n      }\r\n    } else {\r\n      switch (value) {\r\n        case 0: \r\n          ctx.beginPath()\r\n          ctx.moveTo(x*30+6, y*30+6)\r\n          ctx.lineTo(x*30+24, y*30+24)\r\n          ctx.moveTo(x*30+24, y*30+6)\r\n          ctx.lineTo(x*30+6, y*30+24)\r\n          ctx.strokeStyle = \"blue\"\r\n          ctx.stroke()\r\n        break\r\n        case 1: \r\n          ctx.beginPath()\r\n          ctx.arc(x*30+15, y*30+15, 9, 0, Math.PI * 2, true)\r\n          ctx.strokeStyle = \"red\"\r\n          ctx.stroke()\r\n        break\r\n        case 2: \r\n          ctx.beginPath()\r\n          ctx.arc(x*30+15, y*30+15, 7, 0, Math.PI * 2, true)\r\n          ctx.fillStyle = \"green\"\r\n          ctx.fill()\r\n        break\r\n        default: break\r\n      }\r\n    }\r\n  }\r\n  clear = () => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.clearRect(0,0,(this.props.gameInfo.boardSize+1)*30, (this.props.gameInfo.boardSize+1)*30)\r\n    ctx.strokeStyle = '#000'\r\n    ctx.lineWidth = 1\r\n    ctx.beginPath();\r\n    for(let i = 0; i <= this.props.gameInfo.boardSize; i++) {\r\n      ctx.moveTo(i*30, 0)\r\n      ctx.lineTo(i*30, this.props.gameInfo.boardSize*30)\r\n    }\r\n    for(let i = 0; i <= this.props.gameInfo.boardSize; i++) {\r\n      ctx.moveTo(0, i*30)\r\n      ctx.lineTo(this.props.gameInfo.boardSize*30, i*30)\r\n    }\r\n    ctx.stroke()\r\n\r\n  }\r\n  actionTurn = (e) => {\r\n    if (this.paused||this.playerNumber!==this.state.currentPlayerTurn) return this.setState({alertValue: 'Сейчас очередь оппонента'})\r\n    const rect = this.canvas.current.getBoundingClientRect();\r\n    const x = ~~((e.clientX - rect.left)/30);\r\n    const y = ~~((e.clientY - rect.top)/30);\r\n    if (!this.currentBoard.hasOwnProperty(y*+this.props.gameInfo.boardSize+x)) {\r\n      this.props.emitter.emit('action', {x: x, y: y})\r\n    } else this.setState({alertValue: 'Ячейка занята'})\r\n  }\r\n  render() {\r\n      return (\r\n            <>\r\n              <Scoreboard displayCurrentPlayer={true}\r\n                paused={this.paused}\r\n                queue={this.props.gameInfo.queue} \r\n                players={this.props.players} \r\n                currentPlayerTurn={this.state.currentPlayerTurn} \r\n                playerNumber={this.playerNumber}\r\n                timeTurn={this.props.gameInfo.timeTurn} \r\n                lasttime={this.state.lasttime}\r\n                score={this.state.score}\r\n                scoreItemNames={['Счёт']} />\r\n\r\n              <Alert value={this.state.alertValue} />\r\n              \r\n              <div className={styles.canvas}>\r\n                <canvas ref={this.canvas} \r\n                  onClick={this.actionTurn} \r\n                  width={(+this.props.gameInfo.boardSize)*30+1} \r\n                  height={(+this.props.gameInfo.boardSize)*30+1} /> \r\n                <Ruler className={styles.ruler}  \r\n                  countY={this.props.gameInfo.boardSize}\r\n                  countX={this.props.gameInfo.boardSize} />\r\n              </div>\r\n            </>\r\n      )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styles from '../../../static/css/score.module.css'\r\n/*\r\n  displayCurrentPlayer - Выделить текущего игрока\r\n  paused - Останавливает/Включает таймер\r\n  queue - Последовательность игроков к которым применяется\r\n  players - Массив игроков ex: [{\"userId\":\"11\", \"userName\": \"eeee\r\n  currentPlayerTurn - Текщий игрок\r\n  playerNumber - Игрок (не ставить если гость)\r\n  timeTurn - Время на совершение хода \r\n  lasttime - Время начала хода ()\r\n  score - Счёт ex: [[0,0,0], [1,0,0]]\r\n  scoreItemNames - Названия столбцов ex: ['Счёт', 'Осталось', 'Найдено']\r\n*/\r\nexport default class Scoreboard extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      timeleft: ~~((props.timeTurn + props.lasttime - Date.now())/1000),\r\n    }\r\n    this.playerTurnTimer = undefined\r\n  }\r\n  componentDidMount() {\r\n    //Отображение оставшегося времени у игрока\r\n    if (this.props.displayCurrentPlayer) this.playerTurnTimer = setInterval(() => {\r\n      if (!this.paused) {\r\n        const newTimeleft = ~~((this.props.timeTurn + this.props.lasttime - Date.now())/1000)\r\n        this.setState({timeleft: newTimeleft})\r\n      }\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.props.displayCurrentPlayer) clearInterval(this.playerTurnTimer)\r\n  }\r\n  getPlayersList = () => {\r\n    const sortedPlayersArray = []\r\n    if (this.props.queue!==undefined){\r\n      for (let numberInQueue of this.props.queue) {\r\n        sortedPlayersArray.push(this.props.players[numberInQueue])\r\n      }\r\n    } else Array.prototype.push.apply(sortedPlayersArray,this.props.players)\r\n    \r\n    return sortedPlayersArray.map((player, index) => \r\n    <div style={{color: !player.connected?\"rgb(150,150,150)\":this.props.playerNumber===index?\"rgb(255,165,0)\":\"#000\"}}>\r\n      <div>\r\n        <div>{index+1}</div>\r\n        <div>#{player.userId}</div>\r\n        <div>{player.userName}</div>\r\n      </div>\r\n      {this.props.score[index].map(prop=>\r\n      <div>{prop}</div>\r\n      )}\r\n    </div>\r\n    )\r\n  }\r\n  render() {\r\n    const scoreColor = `rgb(${255 - this.state.timeleft/(this.props.timeTurn/1000)*255}, ${this.state.timeleft/(this.props.timeTurn/1000)*200}, 0)`\r\n      return (\r\n              <div className={styles.score}>\r\n                <div>\r\n                  <div>Игроки</div>\r\n                  {this.props.scoreItemNames.map(itemName=>\r\n                    <div>{itemName}</div>\r\n                    )}\r\n                </div>\r\n                {this.props.displayCurrentPlayer?\r\n                <div className={styles.scoreCurrentPlayer} style={{color: scoreColor, top: 30 + this.props.currentPlayerTurn*42+'px', backgroundColor: scoreColor}}>\r\n                  <div>{this.state.timeleft}</div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                </div>\r\n                :<div></div>\r\n                }\r\n                \r\n                {this.getPlayersList()}\r\n              </div>\r\n      )\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"score_score__1Slqo\",\"scoreCurrentPlayer\":\"score_scoreCurrentPlayer__36TAD\"};","import React from 'react'\r\nimport styles from '../../../static/css/alert.module.css'\r\n\r\nexport default class Alert extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n  }\r\n  shouldComponentUpdate = (nextProps) => {\r\n    if (nextProps.value===this.props.value) return false\r\n    this.alertDisplay = true\r\n    if (this.alertTimeoutDestroy!==undefined) {\r\n      clearTimeout(this.alertTimeoutDestroy)\r\n    }\r\n    this.alertTimeoutDestroy = setTimeout(() => {\r\n      this.alertDisplay = false\r\n      this.alertTimeoutDestroy = undefined\r\n      this.forceUpdate()\r\n    }, 3000)\r\n    return true\r\n  }\r\n  alertHide = () => {\r\n    clearTimeout(this.alertTimeoutDestroy)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n    this.forceUpdate()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`${styles.alert} ${this.alertDisplay?styles.alertDisplay:''}`}>\r\n        <div onClick={this.alertHide}>\r\n          {this.props.value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__285A5\",\"alertDisplay\":\"alert_alertDisplay__3muLT\"};","import React from 'react'\r\n/*\r\n  displayCurrentPlayer - Выделить текущего игрока\r\n*/\r\nexport default function Ruler(props) {\r\n  function getListByLength(length) {\r\n    let section = []\r\n    for(let i = 0; i < length; i++) {\r\n      section.push(<li></li>)\r\n    }\r\n    return section\r\n  }\r\n  return (\r\n    <div className={props.className} >\r\n        <ol>\r\n          {getListByLength(props.countX)}\r\n        </ol>\r\n        <ol>\r\n          {getListByLength(props.countY)}\r\n        </ol>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__1xjwk\",\"ruler\":\"canvas_ruler__3jpTN\",\"ruler24\":\"canvas_ruler24__2YnvR\"};"],"sourceRoot":""}