{"version":3,"sources":["static/css/score.module.css","static/css/alert.module.css","static/css/canvas.module.css","components/games/parts/Scoreboard.js","components/games/parts/Alert.js","components/games/parts/CanvasTools.js","components/games/Tictactoe.js"],"names":["module","exports","Scoreboard","props","getPlayersList","sortedPlayersArray","queue","numberInQueue","push","players","map","player","index","style","color","connected","playerNumber","userId","userName","score","prop","state","timeleft","timeTurn","lasttime","Date","now","playerTurnTimer","undefined","this","displayCurrentPlayer","setInterval","paused","setState","clearInterval","scoreColor","className","styles","scoreItemNames","itemName","scoreCurrentPlayer","top","currentPlayerTurn","backgroundColor","React","Component","Alert","shouldComponentUpdate","alertDisplay","alertTimeoutDestroy","clearTimeout","setTimeout","forceUpdate","alertHide","alert","onClick","value","animate","animRenderF","time","animStart","window","requestAnimationFrame","animStep","timestamp","animCurrentTime","Tictactoe","displayPoint","x","y","animation","ctx","canvas","current","getContext","lineCap","lineWidth","currentBoard","gameInfo","boardSize","clearRect","fillStyle","fillRect","fill","strokeStyle","beginPath","coordFirstLine","Math","floor","moveTo","lineTo","coordSecondLine","stroke","arc","PI","clear","i","actionTurn","e","alertValue","rect","getBoundingClientRect","clientX","left","clientY","hasOwnProperty","emitter","emit","updatedScore","forEach","item","every","localStorage","getItem","queuePlayer","queueIndex","createRef","emitterUnsubGame","sub","data","type","prevState","newScore","slice","cell","nextPlayer","cellNumber","ref","width","height"],"mappings":"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","file":"static/js/5.1100d990.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"score_score__1Slqo\",\"scoreCurrentPlayer\":\"score_scoreCurrentPlayer__36TAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__285A5\",\"alertDisplay\":\"alert_alertDisplay__3muLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__1xjwk\"};","import React from 'react';\r\nimport styles from '../../../static/css/score.module.css'\r\n\r\nexport default class Scoreboard extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      timeleft: ~~((props.timeTurn + props.lasttime - Date.now())/1000),\r\n    }\r\n    this.playerTurnTimer = undefined\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.displayCurrentPlayer) this.playerTurnTimer = setInterval(() => this.paused?null:this.setState({timeleft: ~~((this.props.timeTurn + this.props.lasttime - Date.now())/1000)}), 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.props.displayCurrentPlayer) clearInterval(this.playerTurnTimer)\r\n  }\r\n  getPlayersList = () => {\r\n    const sortedPlayersArray = []\r\n    for (let numberInQueue of this.props.queue) {\r\n      sortedPlayersArray.push(this.props.players[numberInQueue])\r\n    }\r\n    return sortedPlayersArray.map((player, index) => \r\n    <div style={{color: !player.connected?\"rgb(150,150,150)\":this.props.playerNumber===index?\"rgb(255,165,0)\":\"#000\"}}>\r\n      <div>\r\n        <div>{index+1}</div>\r\n        <div>#{player.userId}</div>\r\n        <div>{player.userName}</div>\r\n      </div>\r\n      {this.props.score[index].map(prop=>\r\n      <div>{prop}</div>\r\n      )}\r\n    </div>\r\n    )\r\n  }\r\n  render() {\r\n    const scoreColor = `rgb(${255 - this.state.timeleft/(this.props.timeTurn/1000)*255}, ${this.state.timeleft/(this.props.timeTurn/1000)*200}, 0)`\r\n      return (\r\n              <div className={styles.score}>\r\n                <div>\r\n                  <div>Игроки</div>\r\n                  {this.props.scoreItemNames.map(itemName=>\r\n                    <div>{itemName}</div>\r\n                    )}\r\n                </div>\r\n                <div className={styles.scoreCurrentPlayer} style={{color: scoreColor, top: 25 + this.props.currentPlayerTurn*42+'px', backgroundColor: scoreColor}}>\r\n                  <div>{this.state.timeleft}</div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                </div>\r\n                {this.getPlayersList()}\r\n              </div>\r\n      )\r\n  }\r\n}","import React from 'react';\r\nimport styles from '../../../static/css/alert.module.css'\r\n\r\nexport default class Alert extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n  }\r\n  shouldComponentUpdate = () => {\r\n    this.alertDisplay = true\r\n    if (this.alertTimeoutDestroy!==undefined) {\r\n      clearTimeout(this.alertTimeoutDestroy)\r\n    }\r\n    this.alertTimeoutDestroy = setTimeout(() => {\r\n      this.alertDisplay = false\r\n      this.alertTimeoutDestroy = undefined\r\n      this.forceUpdate()\r\n    }, 3000)\r\n    return true\r\n  }\r\n  alertHide = () => {\r\n    clearTimeout(this.alertTimeoutDestroy)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n    this.forceUpdate()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`${styles.alert} ${this.alertDisplay?styles.alertDisplay:''}`}>\r\n        <div onClick={this.alertHide}>\r\n          {this.props.value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","function animate(animRenderF, time) {\r\n  let animStart = null\r\n  const animStep = timestamp => {\r\n    if (!animStart) animStart=timestamp\r\n    const animCurrentTime = timestamp - animStart\r\n    animRenderF(animCurrentTime)\r\n    if (animCurrentTime<time) window.requestAnimationFrame(animStep)\r\n  }      \r\n  window.requestAnimationFrame(animStep)\r\n}\r\nexport {animate}","import React from 'react';\r\nimport Scoreboard from './parts/Scoreboard';\r\nimport Alert from './parts/Alert';\r\nimport {animate} from './parts/CanvasTools';\r\n\r\nimport styles from '../../static/css/canvas.module.css'\r\n\r\nexport default class Tictactoe extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    const updatedScore = []\r\n    props.gameInfo.score.forEach(item=>updatedScore.push([item]))\r\n    this.state = {\r\n\t\t\tcurrentPlayerTurn: props.gameInfo.currentPlayerTurn,\r\n      score: updatedScore,\r\n      alertValue: \"\", \r\n      lasttime: props.gameInfo.lasttime\r\n    }\r\n    this.currentBoard = props.gameInfo.currentBoard\r\n    this.paused = props.gameInfo.paused\r\n    props.players.every((player, index) => player.userId!== +localStorage.getItem('userId')?true:props.gameInfo.queue.every((queuePlayer, queueIndex) => {\r\n        if (queuePlayer===index) {\r\n        this.playerNumber = queueIndex\r\n        return false\r\n      } else return true\r\n    }))\r\n    this.canvas = React.createRef()\r\n    this.playerTurnTimer = undefined\r\n  }\r\n  componentWillMount() {\r\n    this.emitterUnsubGame = this.props.emitter.sub('game', data => {\r\n      switch(data.type) {\r\n        case 'roundStarted': \r\n          this.setState({\r\n            currentPlayerTurn: data.currentPlayerTurn,\r\n            lasttime: data.lasttime,\r\n            alertValue: `Раунд начинается c хода ${this.props.players[this.props.gameInfo.queue[data.currentPlayerTurn]].userName}!`\r\n          })\r\n          this.paused = false\r\n          this.currentBoard = {}\r\n          this.clear()\r\n          break\r\n        case 'roundFinished': \r\n          this.setState((prevState) => {\r\n            const newScore = prevState.score.slice()\r\n            newScore[data.cell][0]++\r\n            this.paused = true\r\n            return {currentPlayerTurn: data.nextPlayer, score: newScore, lasttime: data.lasttime}})\r\n          this.displayPoint(data.cell, data.x, data.y, true)\r\n          this.setState({alertValue: `Раунд завершён! Победил ${this.props.players[this.props.gameInfo.queue[data.cell]].userName}`})\r\n          break\r\n        case 'turn': \r\n          this.setState({currentPlayerTurn: data.nextPlayer, lasttime: data.lasttime, alertValue: `Ход игрока ${this.props.players[this.props.gameInfo.queue[data.nextPlayer]].userName}`})\r\n          this.displayPoint(data.cell, data.x, data.y, true)\r\n          break\r\n        case 'error': \r\n          this.displayPoint(data.cell, data.x, data.y)\r\n          this.setState({alertValue: 'Выбранная ячейка занята'})\r\n          break\r\n        case 'matchFinished': \r\n          clearInterval(this.playerTurnTimer)\r\n          this.setState({alertValue: `Матч завершён. Победил ${this.props.players[this.props.gameInfo.queue[data.currentPlayerTurn]].userName}`})\r\n          break\r\n        case 'nextPlayer': \r\n          if (this.state.currentPlayerTurn===this.playerNumber) this.setState({alertValue: 'Вы пропустили ход'})\r\n          else this.setState({alertValue: 'Оппонент пропустил ход'})\r\n          this.setState({currentPlayerTurn: data.nextPlayer, lasttime: data.lasttime})\r\n          break\r\n        default: break\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n      this.clear()\r\n      for (let cellNumber in this.currentBoard) {\r\n        this.displayPoint(this.currentBoard[cellNumber], cellNumber%this.props.gameInfo.boardSize, ~~(cellNumber/this.props.gameInfo.boardSize))\r\n      }\r\n  }\r\n  componentWillUnmount() {\r\n    this.emitterUnsubGame()\r\n  }\r\n\r\n  displayPoint = (value, x, y, animation=false) => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.lineCap = \"round\"\r\n    ctx.lineWidth = 3\r\n    this.currentBoard[this.props.gameInfo.boardSize*y + x] = value\r\n    if (animation===true) {\r\n      switch (value) {\r\n        case 0: \r\n          animate(timestamp => {\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillStyle = `rgba(200,200,255, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.strokeStyle = \"blue\"\r\n            ctx.beginPath()\r\n            const coordFirstLine = Math.floor((timestamp<300?timestamp:300)/16)\r\n            ctx.moveTo(x*30+6, y*30+6)\r\n            ctx.lineTo(x*30+6+coordFirstLine, y*30+6+coordFirstLine)\r\n            if (timestamp>300) {\r\n              const coordSecondLine = Math.floor((timestamp<600?timestamp-300:300)/16)\r\n              ctx.moveTo(x*30+24, y*30+6)\r\n              ctx.lineTo(x*30+24-coordSecondLine, y*30+6+coordSecondLine)\r\n            }\r\n            ctx.stroke()\r\n          }, 3000)\r\n        break\r\n        case 1: \r\n          animate(timestamp => {\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillStyle = `rgba(255,200,200, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.strokeStyle = \"red\"\r\n            ctx.beginPath()\r\n            ctx.arc(x*30+15, y*30+15, 9, 0,-Math.PI*(timestamp<600?timestamp/300:2), true)\r\n            ctx.stroke()\r\n          }, 3000)\r\n        break\r\n        case 2: \r\n          animate(timestamp => {\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillStyle = `rgba(200,255,200, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.fillStyle = \"green\"\r\n            ctx.beginPath()\r\n            ctx.arc(x*30+15, y*30+15, timestamp<600?timestamp/85:7, 0, Math.PI*2, true)\r\n            ctx.fill()\r\n          }, 3000)\r\n        break\r\n        default: break\r\n      }\r\n    } else {\r\n      switch (value) {\r\n        case 0: \r\n          ctx.strokeStyle = \"blue\"\r\n          ctx.beginPath()\r\n          ctx.moveTo(x*30+6, y*30+6)\r\n          ctx.lineTo(x*30+24, y*30+24)\r\n          ctx.moveTo(x*30+24, y*30+6)\r\n          ctx.lineTo(x*30+6, y*30+24)\r\n          ctx.stroke()\r\n        break\r\n        case 1: \r\n          ctx.strokeStyle = \"red\"\r\n          ctx.beginPath()\r\n          ctx.arc(x*30+15, y*30+15, 9, 0, Math.PI * 2, true)\r\n          ctx.stroke()\r\n        break\r\n        case 2: \r\n          ctx.fillStyle = \"green\"\r\n          ctx.beginPath()\r\n          ctx.arc(x*30+15, y*30+15, 7, 0, Math.PI * 2, true)\r\n          ctx.fill()\r\n        break\r\n        default: break\r\n      }\r\n    }\r\n  }\r\n  clear = () => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.clearRect(0,0,(this.props.gameInfo.boardSize+1)*30, (this.props.gameInfo.boardSize+1)*30)\r\n    ctx.strokeStyle = '#000'\r\n    ctx.lineWidth = 1\r\n    ctx.beginPath();\r\n    for(let i = 0; i <= this.props.gameInfo.boardSize; i++) {\r\n      ctx.moveTo(i*30, 0)\r\n      ctx.lineTo(i*30, this.props.gameInfo.boardSize*30)\r\n    }\r\n    for(let i = 0; i <= this.props.gameInfo.boardSize; i++) {\r\n      ctx.moveTo(0, i*30)\r\n      ctx.lineTo(this.props.gameInfo.boardSize*30, i*30)\r\n    }\r\n    ctx.stroke()\r\n\r\n  }\r\n  actionTurn = (e) => {\r\n    if (this.paused||this.playerNumber!==this.state.currentPlayerTurn) return this.setState({alertValue: 'Сейчас очередь оппонента'})\r\n    const rect = this.canvas.current.getBoundingClientRect();\r\n    const x = ~~((e.clientX - rect.left)/30);\r\n    const y = ~~((e.clientY - rect.top)/30);\r\n    if (!this.currentBoard.hasOwnProperty(y*+this.props.gameInfo.boardSize+x)) {\r\n      this.props.emitter.emit('action', {x: x, y: y})\r\n    } else this.setState({alertValue: 'Ячейка занята'})\r\n  }\r\n  render() {\r\n      return (\r\n            <>\r\n              <Scoreboard displayCurrentPlayer={true}\r\n                paused={this.paused}\r\n                queue={this.props.gameInfo.queue} \r\n                players={this.props.players} \r\n                currentPlayerTurn={this.state.currentPlayerTurn} \r\n                playerNumber={this.playerNumber}\r\n                timeTurn={this.props.gameInfo.timeTurn} \r\n                lasttime={this.state.lasttime}\r\n                score={this.state.score}\r\n                scoreItemNames={['Счёт']} />\r\n\r\n              <Alert value={this.state.alertValue} />\r\n              \r\n              <div className={styles.canvas}>\r\n                <canvas ref={this.canvas} onClick={this.actionTurn} width={(+this.props.gameInfo.boardSize)*30+1} height={(+this.props.gameInfo.boardSize)*30+1}></canvas> \r\n              </div>\r\n            </>\r\n      )\r\n  }\r\n}\r\n"],"sourceRoot":""}