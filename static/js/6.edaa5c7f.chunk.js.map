{"version":3,"sources":["components/games/parts/Scoreboard.js","static/css/score.module.css","components/games/parts/Alert.js","static/css/alert.module.css","components/games/parts/Ruler.js","static/css/canvas.module.css","components/games/parts/CanvasTools.js","components/games/Tictactoe.js"],"names":["Scoreboard","props","getPlayersList","sortedPlayersArray","undefined","queue","numberInQueue","push","players","Array","prototype","apply","map","player","index","style","color","connected","playerNumber","userId","userName","score","prop","state","timeleft","timeTurn","lasttime","Date","now","playerTurnTimer","this","displayCurrentPlayer","setInterval","paused","newTimeleft","setState","clearInterval","scoreColor","className","styles","scoreItemNames","itemName","scoreCurrentPlayer","top","currentPlayerTurn","backgroundColor","React","Component","module","exports","Alert","shouldComponentUpdate","nextProps","value","alertDisplay","alertTimeoutDestroy","clearTimeout","setTimeout","forceUpdate","alertHide","alert","onClick","Ruler","getListByLength","length","section","i","countX","countY","animate","animRenderF","time","animStart","window","requestAnimationFrame","animStep","timestamp","animCurrentTime","Tictactoe","displayPoint","x","y","animation","ctx","canvas","current","getContext","lineCap","lineWidth","currentBoard","gameInfo","boardSize","fillStyle","strokeStyle","clearRect","fillRect","fill","beginPath","coordFirstLine","Math","floor","moveTo","lineTo","coordSecondLine","stroke","arc","PI","clear","actionTurn","e","alertValue","rect","getBoundingClientRect","clientX","left","clientY","hasOwnProperty","emitter","emit","every","localStorage","getItem","queuePlayer","queueIndex","createRef","emitterUnsubGame","sub","data","type","cell","newScore","prevState","nextPlayer","cellNumber","ref","width","height","ruler"],"mappings":"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","file":"static/js/6.edaa5c7f.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from '../../../static/css/score.module.css'\r\n/*\r\n  displayCurrentPlayer - Выделить текущего игрока\r\n  paused - Останавливает/Включает таймер\r\n  queue - Последовательность игроков к которым применяется\r\n  players - Массив игроков ex: [{\"userId\":\"11\", \"userName\": \"eeee\r\n  currentPlayerTurn - Текщий игрок\r\n  playerNumber - Игрок (не ставить если гость)\r\n  timeTurn - Время на совершение хода \r\n  lasttime - Время начала хода ()\r\n  score - Счёт ex: [[0,0,0], [1,0,0]]\r\n  scoreItemNames - Названия столбцов ex: ['Счёт', 'Осталось', 'Найдено']\r\n*/\r\nexport default class Scoreboard extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n      timeleft: ~~((props.timeTurn + props.lasttime - Date.now())/1000),\r\n    }\r\n    this.playerTurnTimer = undefined\r\n  }\r\n  componentDidMount() {\r\n    //Отображение оставшегося времени у игрока\r\n    if (this.props.displayCurrentPlayer) this.playerTurnTimer = setInterval(() => {\r\n      if (!this.paused) {\r\n        const newTimeleft = ~~((this.props.timeTurn + this.props.lasttime - Date.now())/1000)\r\n        this.setState({timeleft: newTimeleft})\r\n      }\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.props.displayCurrentPlayer) clearInterval(this.playerTurnTimer)\r\n  }\r\n  getPlayersList = () => {\r\n    const sortedPlayersArray = []\r\n    if (this.props.queue!==undefined){\r\n      for (let numberInQueue of this.props.queue) {\r\n        sortedPlayersArray.push(this.props.players[numberInQueue])\r\n      }\r\n    } else Array.prototype.push.apply(sortedPlayersArray,this.props.players)\r\n    \r\n    return sortedPlayersArray.map((player, index) => \r\n    <div style={{color: !player.connected?\"rgb(150,150,150)\":this.props.playerNumber===index?\"rgb(255,165,0)\":\"#000\"}}>\r\n      <div>\r\n        <div>{index+1}</div>\r\n        <div>#{player.userId}</div>\r\n        <div>{player.userName}</div>\r\n      </div>\r\n      {this.props.score[index].map(prop=>\r\n      <div>{prop}</div>\r\n      )}\r\n    </div>\r\n    )\r\n  }\r\n  render() {\r\n    const scoreColor = `rgb(${255 - this.state.timeleft/(this.props.timeTurn/1000)*255}, ${this.state.timeleft/(this.props.timeTurn/1000)*200}, 0)`\r\n      return (\r\n              <div className={styles.score}>\r\n                <div>\r\n                  <div>Игроки</div>\r\n                  {this.props.scoreItemNames.map(itemName=>\r\n                    <div>{itemName}</div>\r\n                    )}\r\n                </div>\r\n                {this.props.displayCurrentPlayer?\r\n                <div className={styles.scoreCurrentPlayer} style={{color: scoreColor, top: 30 + this.props.currentPlayerTurn*42+'px', backgroundColor: scoreColor}}>\r\n                  <div>{this.state.timeleft}</div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                  <div style={{\"border-color\": scoreColor}}></div>\r\n                </div>\r\n                :<div></div>\r\n                }\r\n                \r\n                {this.getPlayersList()}\r\n              </div>\r\n      )\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"score_score__1Slqo\",\"scoreCurrentPlayer\":\"score_scoreCurrentPlayer__36TAD\"};","import React from 'react'\r\nimport styles from '../../../static/css/alert.module.css'\r\n\r\nexport default class Alert extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n  }\r\n  shouldComponentUpdate = (nextProps) => {\r\n    if (nextProps.value===this.props.value) return false\r\n    this.alertDisplay = true\r\n    if (this.alertTimeoutDestroy!==undefined) {\r\n      clearTimeout(this.alertTimeoutDestroy)\r\n    }\r\n    this.alertTimeoutDestroy = setTimeout(() => {\r\n      this.alertDisplay = false\r\n      this.alertTimeoutDestroy = undefined\r\n      this.forceUpdate()\r\n    }, 3000)\r\n    return true\r\n  }\r\n  alertHide = () => {\r\n    clearTimeout(this.alertTimeoutDestroy)\r\n    this.alertDisplay = false\r\n    this.alertTimeoutDestroy = undefined\r\n    this.forceUpdate()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`${styles.alert} ${this.alertDisplay?styles.alertDisplay:''}`}>\r\n        <div onClick={this.alertHide}>\r\n          {this.props.value}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__285A5\",\"alertDisplay\":\"alert_alertDisplay__3muLT\"};","import React from 'react'\r\n/*\r\n  displayCurrentPlayer - Выделить текущего игрока\r\n*/\r\nexport default function Ruler(props) {\r\n  function getListByLength(length) {\r\n    let section = []\r\n    for(let i = 0; i < length; i++) {\r\n      section.push(<li></li>)\r\n    }\r\n    return section\r\n  }\r\n  return (\r\n    <div className={props.className} >\r\n        <ol>\r\n          {getListByLength(props.countX)}\r\n        </ol>\r\n        <ol>\r\n          {getListByLength(props.countY)}\r\n        </ol>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas_canvas__1xjwk\",\"ruler\":\"canvas_ruler__3jpTN\",\"ruler24\":\"canvas_ruler24__2YnvR\"};","function animate(animRenderF, time) {\r\n  let animStart = null\r\n  const animStep = timestamp => {\r\n    if (!animStart) animStart=timestamp\r\n    const animCurrentTime = timestamp - animStart\r\n    animRenderF(animCurrentTime)\r\n    if (animCurrentTime<time) window.requestAnimationFrame(animStep)\r\n  }      \r\n  window.requestAnimationFrame(animStep)\r\n}\r\nexport {animate}","import React from 'react'\r\nimport Scoreboard from './parts/Scoreboard'\r\nimport Alert from './parts/Alert'\r\nimport Ruler from './parts/Ruler'\r\nimport {animate} from './parts/CanvasTools'\r\n\r\nimport styles from '../../static/css/canvas.module.css'\r\n\r\nexport default class Tictactoe extends React.Component {\r\n  constructor(props) {\r\n    super(props) \r\n    this.state = {\r\n\t\t\tcurrentPlayerTurn: props.gameInfo.currentPlayerTurn,\r\n      score: props.gameInfo.score,\r\n      alertValue: \"\", \r\n      lasttime: props.gameInfo.lasttime\r\n    }\r\n    this.currentBoard = props.gameInfo.currentBoard\r\n    this.paused = props.gameInfo.paused\r\n    props.players.every((player, index) => player.userId!== +localStorage.getItem('userId')?true:props.gameInfo.queue.every((queuePlayer, queueIndex) => {\r\n        if (queuePlayer===index) {\r\n        this.playerNumber = queueIndex\r\n        return false\r\n      } else return true\r\n    }))\r\n    this.canvas = React.createRef()\r\n  }\r\n  componentWillMount() {\r\n    this.emitterUnsubGame = this.props.emitter.sub('game', data => {\r\n      switch(data.type) {\r\n        case 'roundStarted': \r\n          this.setState({\r\n            currentPlayerTurn: data.currentPlayerTurn,\r\n            lasttime: data.lasttime,\r\n            alertValue: `Раунд начинается c хода ${this.props.players[this.props.gameInfo.queue[data.currentPlayerTurn]].userName}!`\r\n          })\r\n          this.paused = false\r\n          this.currentBoard = {}\r\n          this.clear()\r\n          break\r\n        case 'roundFinished': \r\n          this.paused = true\r\n          this.displayPoint(data.cell, data.x, data.y, true)\r\n          const newScore = this.state.score[data.cell][0]++\r\n          this.setState((prevState) => ({\r\n            currentPlayerTurn: data.nextPlayer, \r\n            score: {...prevState.score, ...newScore}, \r\n            lasttime: data.lasttime, \r\n            alertValue: `Раунд завершён! Победил ${this.props.players[this.props.gameInfo.queue[data.cell]].userName}`}))\r\n          break\r\n        case 'turn': \r\n          this.setState({currentPlayerTurn: data.nextPlayer, lasttime: data.lasttime, alertValue: `Ход игрока ${this.props.players[this.props.gameInfo.queue[data.nextPlayer]].userName}`})\r\n          this.displayPoint(data.cell, data.x, data.y, true)\r\n          break\r\n        case 'error': \r\n          this.displayPoint(data.cell, data.x, data.y)\r\n          break\r\n        case 'matchFinished': \r\n          this.setState({alertValue: `Матч завершён. Победил ${this.props.players[this.props.gameInfo.queue[data.currentPlayerTurn]].userName}`})\r\n          break\r\n        case 'nextPlayer': \r\n          if (this.state.currentPlayerTurn===this.playerNumber) this.setState({alertValue: 'Вы пропустили ход'})\r\n          else this.setState({alertValue: 'Оппонент пропустил ход'})\r\n          this.setState({currentPlayerTurn: data.nextPlayer, lasttime: data.lasttime})\r\n          break\r\n        default: break\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n      this.clear()\r\n      for (let cellNumber in this.currentBoard) {\r\n        this.displayPoint(this.currentBoard[cellNumber], cellNumber%this.props.gameInfo.boardSize, ~~(cellNumber/this.props.gameInfo.boardSize))\r\n      }\r\n  }\r\n  componentWillUnmount() {\r\n    this.emitterUnsubGame()\r\n  }\r\n\r\n  displayPoint = (value, x, y, animation=false) => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.lineCap = \"round\"\r\n    ctx.lineWidth = 3\r\n    this.currentBoard[this.props.gameInfo.boardSize*y + x] = value\r\n    if (animation===true) {\r\n      switch (value) {\r\n        case 0: \r\n          animate(timestamp => {\r\n            ctx.fillStyle = `rgba(200,200,255, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.strokeStyle = \"blue\"\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.beginPath()\r\n            const coordFirstLine = Math.floor((timestamp<300?timestamp:300)/16)\r\n            ctx.moveTo(x*30+6, y*30+6)\r\n            ctx.lineTo(x*30+6+coordFirstLine, y*30+6+coordFirstLine)\r\n            if (timestamp>300) {\r\n              const coordSecondLine = Math.floor((timestamp<600?timestamp-300:300)/16)\r\n              ctx.moveTo(x*30+24, y*30+6)\r\n              ctx.lineTo(x*30+24-coordSecondLine, y*30+6+coordSecondLine)\r\n            }\r\n            ctx.stroke()\r\n          }, 3000)\r\n        break\r\n        case 1: \r\n          animate(timestamp => {\r\n            ctx.fillStyle = `rgba(255,200,200, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.strokeStyle = \"red\"\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.beginPath()\r\n            ctx.arc(x*30+15, y*30+15, 9, 0,-Math.PI*(timestamp<600?timestamp/300:2), true)\r\n            ctx.stroke()\r\n          }, 3000)\r\n        break\r\n        case 2: \r\n          animate(timestamp => {\r\n            ctx.fillStyle = `rgba(200,255,200, ${timestamp<1000?timestamp/1000:timestamp>2000?1-(timestamp-2000)/1000:1})`\r\n            ctx.clearRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fillRect(x*30+1, y*30+1, 28, 28)\r\n            ctx.fill()\r\n            ctx.fillStyle = \"green\"\r\n            ctx.beginPath()\r\n            ctx.arc(x*30+15, y*30+15, timestamp<600?timestamp/85:7, 0, Math.PI*2, true)\r\n            ctx.fill()\r\n          }, 3000)\r\n        break\r\n        default: break\r\n      }\r\n    } else {\r\n      switch (value) {\r\n        case 0: \r\n          ctx.beginPath()\r\n          ctx.moveTo(x*30+6, y*30+6)\r\n          ctx.lineTo(x*30+24, y*30+24)\r\n          ctx.moveTo(x*30+24, y*30+6)\r\n          ctx.lineTo(x*30+6, y*30+24)\r\n          ctx.strokeStyle = \"blue\"\r\n          ctx.stroke()\r\n        break\r\n        case 1: \r\n          ctx.beginPath()\r\n          ctx.arc(x*30+15, y*30+15, 9, 0, Math.PI * 2, true)\r\n          ctx.strokeStyle = \"red\"\r\n          ctx.stroke()\r\n        break\r\n        case 2: \r\n          ctx.beginPath()\r\n          ctx.arc(x*30+15, y*30+15, 7, 0, Math.PI * 2, true)\r\n          ctx.fillStyle = \"green\"\r\n          ctx.fill()\r\n        break\r\n        default: break\r\n      }\r\n    }\r\n  }\r\n  clear = () => {\r\n    const ctx = this.canvas.current.getContext('2d')\r\n    ctx.clearRect(0,0,(this.props.gameInfo.boardSize+1)*30, (this.props.gameInfo.boardSize+1)*30)\r\n    ctx.strokeStyle = '#000'\r\n    ctx.lineWidth = 1\r\n    ctx.beginPath();\r\n    for(let i = 0; i <= this.props.gameInfo.boardSize; i++) {\r\n      ctx.moveTo(i*30, 0)\r\n      ctx.lineTo(i*30, this.props.gameInfo.boardSize*30)\r\n    }\r\n    for(let i = 0; i <= this.props.gameInfo.boardSize; i++) {\r\n      ctx.moveTo(0, i*30)\r\n      ctx.lineTo(this.props.gameInfo.boardSize*30, i*30)\r\n    }\r\n    ctx.stroke()\r\n\r\n  }\r\n  actionTurn = (e) => {\r\n    if (this.paused||this.playerNumber!==this.state.currentPlayerTurn) return this.setState({alertValue: 'Сейчас очередь оппонента'})\r\n    const rect = this.canvas.current.getBoundingClientRect();\r\n    const x = ~~((e.clientX - rect.left)/30);\r\n    const y = ~~((e.clientY - rect.top)/30);\r\n    if (!this.currentBoard.hasOwnProperty(y*+this.props.gameInfo.boardSize+x)) {\r\n      this.props.emitter.emit('action', {x: x, y: y})\r\n    } else this.setState({alertValue: 'Ячейка занята'})\r\n  }\r\n  render() {\r\n      return (\r\n            <>\r\n              <Scoreboard displayCurrentPlayer={true}\r\n                paused={this.paused}\r\n                queue={this.props.gameInfo.queue} \r\n                players={this.props.players} \r\n                currentPlayerTurn={this.state.currentPlayerTurn} \r\n                playerNumber={this.playerNumber}\r\n                timeTurn={this.props.gameInfo.timeTurn} \r\n                lasttime={this.state.lasttime}\r\n                score={this.state.score}\r\n                scoreItemNames={['Счёт']} />\r\n\r\n              <Alert value={this.state.alertValue} />\r\n              \r\n              <div className={styles.canvas}>\r\n                <canvas ref={this.canvas} \r\n                  onClick={this.actionTurn} \r\n                  width={(+this.props.gameInfo.boardSize)*30+1} \r\n                  height={(+this.props.gameInfo.boardSize)*30+1} /> \r\n                <Ruler className={styles.ruler}  \r\n                  countY={this.props.gameInfo.boardSize}\r\n                  countX={this.props.gameInfo.boardSize} />\r\n              </div>\r\n            </>\r\n      )\r\n  }\r\n}\r\n"],"sourceRoot":""}